#!/usr/bin/env bash
# vim:foldmethod=marker
# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# autoexec {{{
setxkbmap -v no &
xsetroot -solid '#5A8E3A'
xsetroot -cursor_name left_ptr
xrdb $HOME/.Xresources
feh --bg-scale $HOME/.config/wall.png &
xrandr --output DisplayPort-0 --primary --mode 2560x1440 --pos 1920x0 --rotate normal --output HDMI-A-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DisplayPort-1 --mode 1920x1080 --pos 4480x0 --rotate normal --output DVI-I-0 --off --output DP-1 --off --output DP-0 --off &
if ! pgrep "picom" > /dev/null 2>&1 ; then
  picom -b &
fi
# }}}
# keybindings {{{
hc keyunbind --all

mod=Mod4
term="alacritty"

hc keybind $mod-Shift-q quit
hc keybind $mod-Control-r reload
hc keybind $mod-q close
hc keybind $mod-d spawn rofi -show run -lines 3 -eh 2
hc keybind $mod-Return spawn $term # use your $TERMINAL with xterm as fallback
hc keybind Control-Shift-c spawn sharenix-section -n -c
hc keybind Control-Shift-x spawn xfce4-screenshooter -w -o "sharenix -n -c"

# basic movement in tiling and floating mode
# focusing clients
hc keybind $mod-Left  focus left
hc keybind $mod-Down  focus down
hc keybind $mod-Up    focus up
hc keybind $mod-Right focus right

# moving clients in tiling and floating mode
hc keybind $mod-Shift-Left  shift left
hc keybind $mod-Shift-Down  shift down
hc keybind $mod-Shift-Up    shift up
hc keybind $mod-Shift-Right shift right

hc keybind $mod-u       split   bottom  0.5
hc keybind $mod-o       split   right   0.5
hc keybind $mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $mod-Control-Left    resize left +$resizestep
hc keybind $mod-Control-Down    resize down +$resizestep
hc keybind $mod-Control-Up      resize up +$resizestep
hc keybind $mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} 0 )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$mod-$key" use_index "$i"
        hc keybind "$mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $mod-period use_index +1 --skip-visible
hc keybind $mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $mod-r remove
hc keybind $mod-s floating toggle
hc keybind $mod-f fullscreen toggle
hc keybind $mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $mod-Shift-m set_attr clients.focus.minimized true
hc keybind $mod-Control-m jumpto last-minimized
hc keybind $mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $mod-Button1 move
hc mousebind $mod-Button2 zoom
hc mousebind $mod-Button3 resize

# focus
hc keybind $mod-BackSpace   cycle_monitor
hc keybind $mod-Tab         cycle_all +1
hc keybind $mod-Shift-Tab   cycle_all -1
hc keybind $mod-c cycle
hc keybind $mod-i jumpto urgent
# }}}
# theme {{{
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#00000000'
hc set frame_border_normal_color '#00000000'
hc set frame_bg_normal_color '#565656aa'
hc set frame_bg_active_color '#ebdbb2aa'
hc set frame_border_width 5
hc set always_show_frame 1
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_padding 0

#hc attr theme.title_height 15
#hc attr theme.title_font 'Dejavu Sans:pixelsize=12'  # example using Xft
# hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
hc attr theme.padding_top 2  # space below the title's baseline (i.e. text depth)
hc attr theme.active.color '#ebdbb2ef'
hc attr theme.title_color '#ffffff'
hc attr theme.normal.color '#2e2e2edd'
hc attr theme.urgent.color '#7811A1dd'
hc attr theme.normal.title_color '#898989'
hc attr theme.inner_width 20
hc attr theme.inner_color black
hc attr theme.border_width 4
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#789161'
hc attr theme.urgent.inner_color '#9A65B0'
hc attr theme.normal.inner_color '#606060'
# copy inner color to outer_color
for state in active urgent normal ; do
    hc substitute C theme.${state}.inner_color \
        attr theme.${state}.outer_color C
done
hc attr theme.active.outer_width 1
hc attr theme.background_color '#141414'
# }}}
# rules and settings {{{
hc set window_gap 8
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings off
hc set mouse_recenter_gap 0
hc set focus_crosses_monitor_boundaries 1
hc set focus_follows_mouse 1

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
hc set_monitors 1920x1080+0+0 2560x1440+1920+0 1920x1080+4480+0
# or simply:
# hc detect_monitors
# }}}
# panel {{{
# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done
# }}}
